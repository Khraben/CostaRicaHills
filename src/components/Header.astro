---
import '../styles/Header.css';
import {listenForAuthChanges,userName, userPhotoUrl } from './auth';
import '../styles/Header.css';
listenForAuthChanges();
---
<header class="navbar">
  <nav>
    <div class="logo-container">
      <img src="src/assets/Logo Costa Rica Hills sin fondo.png" alt="Logo" />
      <span>Costa Rica Hills</span>
    </div>
    <div class="nav-links">
      <a href="/tours">Tours</a>
      <a href="/about">Sobre Nosotros</a>
      <!-- Foto del usuario -->
      <img src={userPhotoUrl} alt="Foto de Usuario" class="user-photo" id="user-photo"/>
    </div>
  </nav>
  <!-- Modal de inicio de sesión -->
  <div id="login-modal" class="modal">
      <div class="modal-content">
          <span class="close" onclick="document.getElementById('login-modal').style.display='none'">&times;</span>
          <h2>Iniciar Sesión</h2>
          <form id="login-form-element">
              <label for="email">Correo:</label>
              <input type="email" id="email" required />
              <label for="password">Contraseña:</label>
              <input type="password" id="password" required />
              <button type="submit">Iniciar Sesión</button>
          </form>
          <button type="button" id="google-login-button" class="google-button">
            <img src="src/assets/google-logo.png" alt="Google Logo" style="height: 20px; vertical-align: middle; margin-right: 5px;" />
            Iniciar Sesión con Google
          </button>
          <button type="button" id="show-register-modal">Registrarse</button>
      </div>
  </div>

  <!-- Modal de registro -->
  <div id="register-modal" class="modal">
      <div class="modal-content">
          <span class="close" onclick="document.getElementById('register-modal').style.display='none'">&times;</span>
          <h2>Registrarse</h2>
          <form id="register-form-element">
              <label for="register-email">Correo:</label>
              <input type="email" id="register-email" required />
              <label for="register-password">Contraseña:</label>
              <input type="password" id="register-password" required />
              <button type="submit">Registrarse</button>
          </form>
          <button type="button" id="show-login-modal">Volver a Iniciar Sesión</button>
      </div>
  </div>
  <!-- Información del usuario -->
  <div id="user-info" class="modal">
      <div class="modal-content">
          <span class="close" onclick="document.getElementById('user-info').style.display='none'">&times;</span>
          <img src={userPhotoUrl} alt="Foto de Usuario" class="login-link" id="modal-user-photo"/>
          <p id="user-name">{userName}</p>
          <button id="logout-button">Cerrar Sesión</button>
      </div>
  </div>


  <!-- Scripts -->
  <script>
import { loginUser,listenForAuthChanges, loginWithGoogle,registerUser,logoutUser,isLoggedIn, userName,userPhotoUrl} from "./auth";
// Inicia la escucha de cambios de autenticación
    document.addEventListener('DOMContentLoaded', () => {
        const loginModal = document.getElementById('login-modal');
        const registerModal = document.getElementById('register-modal');
        const userInfoModal = document.getElementById('user-info');
        const updateUserInfo = () => {
            listenForAuthChanges();
            const userPhoto = document.getElementById('user-photo');
            const modalUserPhoto = document.getElementById('modal-user-photo');
            if (isLoggedIn) {
                document.getElementById('user-name').textContent = userName; // Actualiza el nombre del usuario
                userPhoto.src = userPhotoUrl; // Actualiza la foto del usuario en el header
                modalUserPhoto.src = userPhotoUrl; 
            } else {
                userPhoto.src = 'src/assets/userDefault.jpg'; // Foto por defecto
                modalUserPhoto.src = 'src/assets/userDefault.jpg';
            }
        };

        // Función para manejar el inicio de sesión con correo y contraseña
        const handleLogin = async (event) => {
            event.preventDefault();
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const success = await loginUser(email, password);
            if (success) {
                loginModal.style.display = 'none'; // Cierra el modal
                updateUserInfo(); // Actualiza la información del usuario en el modal
            } else {
                alert('Error al iniciar sesión. Verifica tus credenciales.');
            }
        };

        // Función para manejar el registro de nuevos usuarios
        const handleRegister = async (event) => {
            event.preventDefault();
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;
            const success = await registerUser(email, password);
            if (success) {
                registerModal.style.display = 'none'; // Cierra el modal
                updateUserInfo(); // Actualiza la información del usuario en el modal
            } else {
                alert('Error al registrarse. Por favor, intenta nuevamente.');
            }
        };

        // Función para manejar el inicio de sesión con Google
        const handleGoogleLogin = async () => {
            const success = await loginWithGoogle();
            if (success) {
                loginModal.style.display = 'none'; // Cierra el modal
                updateUserInfo();
            } else {
                alert('Error al iniciar sesión con Google.');
            }
        };

        // Función para manejar el cierre de sesión
        const handleLogout = async () => {
            const success = await logoutUser();
            if (success) {
                userInfoModal.style.display = 'none'; // Oculta la información del usuario
                updateUserInfo(); // Actualiza la información del usuario en el modal
            }
        };

        // Mostrar modal de inicio de sesión cuando se hace clic en la foto de usuario
        document.getElementById('user-photo').addEventListener('click', () => {
            if (isLoggedIn) {
                userInfoModal.style.display = 'block'; // Mostrar el modal de información del usuario
            } else {
                loginModal.style.display = 'block'; // Mostrar el modal de inicio de sesión
            }
            updateUserInfo(); // Actualiza la información del usuario en el modal
        });

        // Mostrar modal de registro
        document.getElementById('show-register-modal').addEventListener('click', () => {
            loginModal.style.display = 'none';
            registerModal.style.display = 'block';
        });

        // Volver al modal de inicio de sesión
        document.getElementById('show-login-modal').addEventListener('click', () => {
            registerModal.style.display = 'none';
            loginModal.style.display = 'block';
        });

        // Manejar cierre de sesión
        document.getElementById('logout-button').addEventListener('click', handleLogout);

        // Manejar el inicio de sesión con Google
        document.getElementById('google-login-button').addEventListener('click', async () => {
            await handleGoogleLogin(); // Llama a la función para manejar el inicio de sesión con Google
        });

        // Manejar el formulario de inicio de sesión
        document.getElementById('login-form-element').addEventListener('submit', handleLogin);

        // Manejar el formulario de registro
        document.getElementById('register-form-element').addEventListener('submit', handleRegister);

        // Actualizar la información del usuario al cargar la página
        updateUserInfo();
    });
  </script>
  <!-- Estilos para el header cuando se hace scroll -->
  <script>
    window.addEventListener('scroll', function() {
      const header = document.querySelector('.navbar');
      if (window.scrollY > 50) {
        header.classList.add('scrolled');
      } else {
        header.classList.remove('scrolled');
      }
    });
  </script>
</header>